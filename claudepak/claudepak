#!/bin/bash

# claudepak - Claude Code Configuration Manager
# Export and import Claude Code configurations with MCP servers and custom commands

VERSION="1.0.0"
CLAUDE_CONFIG="$HOME/.claude.json"
CLAUDE_DESKTOP_CONFIG="$HOME/Library/Application Support/Claude/claude_desktop_config.json"

show_help() {
    cat << EOF
claudepak v$VERSION - Claude Code Configuration Manager

USAGE:
    claudepak export <name> [directory]    Export current Claude configuration
    claudepak import <directory>           Import Claude configuration
    claudepak list                         List available configurations
    claudepak backup                       Create backup of current config
    claudepak --help                       Show this help

EXAMPLES:
    claudepak export myconfig              Export to ./myconfig/
    claudepak export myconfig ~/configs    Export to ~/configs/myconfig/
    claudepak import ./myconfig            Import from ./myconfig/
    claudepak backup                       Backup to ./backup-TIMESTAMP/

DIRECTORY STRUCTURE:
    config-name/
    â”œâ”€â”€ claude.json                    Claude Code config
    â”œâ”€â”€ claude_desktop_config.json     Claude Desktop config
    â”œâ”€â”€ commands/                      Custom slash commands
    â””â”€â”€ README.md                      Installation instructions

EOF
}

log() {
    echo "[$(date '+%Y-%m-%d %H:%M:%S')] $1"
}

error() {
    echo "ERROR: $1" >&2
    exit 1
}

export_config() {
    local config_name="$1"
    local base_dir="${2:-.}"  # Use second argument or current directory
    local package_dir="$base_dir/$config_name"
    
    log "Creating Claude configuration directory: $package_dir"
    
    # Create package directory
    mkdir -p "$package_dir"
    
    # Export Claude Code config if it exists
    if [[ -f "$CLAUDE_CONFIG" ]]; then
        cp "$CLAUDE_CONFIG" "$package_dir/claude.json"
        log "âœ“ Exported Claude Code configuration"
    else
        log "âš  Claude Code config not found at $CLAUDE_CONFIG"
    fi
    
    # Export Claude Desktop config if it exists  
    if [[ -f "$CLAUDE_DESKTOP_CONFIG" ]]; then
        cp "$CLAUDE_DESKTOP_CONFIG" "$package_dir/claude_desktop_config.json"
        log "âœ“ Exported Claude Desktop configuration"
    else
        log "âš  Claude Desktop config not found"
    fi
    
    # Export custom commands if they exist
    if [[ -d "$HOME/.claude/commands" ]]; then
        cp -r "$HOME/.claude/commands" "$package_dir/"
        log "âœ“ Exported custom slash commands"
    elif [[ -d "$HOME/claudtopia/.claude/commands" ]]; then
        cp -r "$HOME/claudtopia/.claude/commands" "$package_dir/"
        log "âœ“ Exported custom slash commands from claudtopia"
    else
        log "âš  No custom commands found"
    fi
    
    # Create installation README
    cat > "$package_dir/README.md" << EOF
# Claude Configuration: $config_name

Exported on: $(date)
System: $(uname -s) $(uname -r)

## Installation

\`\`\`bash
# Import this configuration
claudepak import $package_dir

# Or manually:
cp claude.json ~/.claude.json
cp claude_desktop_config.json ~/Library/Application\ Support/Claude/
cp -r commands ~/.claude/
\`\`\`

## Contents

- \`claude.json\` - Claude Code configuration
- \`claude_desktop_config.json\` - Claude Desktop MCP servers
- \`commands/\` - Custom slash commands for Claude Code

## Notes

Make sure to restart Claude Code and Claude Desktop after importing.
Update any file paths or API keys specific to your environment.
EOF
    
    log "âœ… Configuration exported to: $package_dir"
}

import_config() {
    local config_dir="$1"
    
    [[ -d "$config_dir" ]] || error "Configuration directory not found: $config_dir"
    
    log "Importing Claude configuration from: $config_dir"
    
    # Backup existing configs
    [[ -f "$CLAUDE_CONFIG" ]] && cp "$CLAUDE_CONFIG" "$CLAUDE_CONFIG.backup.$(date +%s)"
    [[ -f "$CLAUDE_DESKTOP_CONFIG" ]] && cp "$CLAUDE_DESKTOP_CONFIG" "$CLAUDE_DESKTOP_CONFIG.backup.$(date +%s)"
    
    # Import configurations
    if [[ -f "$config_dir/claude.json" ]]; then
        cp "$config_dir/claude.json" "$CLAUDE_CONFIG"
        log "âœ“ Imported Claude Code configuration"
    fi
    
    if [[ -f "$config_dir/claude_desktop_config.json" ]]; then
        mkdir -p "$(dirname "$CLAUDE_DESKTOP_CONFIG")"
        cp "$config_dir/claude_desktop_config.json" "$CLAUDE_DESKTOP_CONFIG"
        log "âœ“ Imported Claude Desktop configuration"
    fi
    
    if [[ -d "$config_dir/commands" ]]; then
        mkdir -p "$HOME/.claude"
        cp -r "$config_dir/commands" "$HOME/.claude/"
        log "âœ“ Imported custom slash commands"
    fi
    
    log "âœ… Configuration imported successfully"
    log "ðŸ’¡ Restart Claude Code and Claude Desktop to apply changes"
}

backup_config() {
    local backup_name="backup-$(date +%Y%m%d-%H%M%S)"
    export_config "$backup_name"
}

list_configs() {
    log "Available configuration directories:"
    for dir in */; do
        if [[ -f "$dir/claude.json" ]] || [[ -f "$dir/claude_desktop_config.json" ]]; then
            echo "  $dir"
        fi
    done
}

# Main script logic
case "$1" in
    export)
        [[ -n "$2" ]] || error "Usage: claudepak export <config-name> [directory]"
        export_config "$2" "$3"
        ;;
    import)
        [[ -n "$2" ]] || error "Usage: claudepak import <directory>"
        import_config "$2"
        ;;
    backup)
        backup_config
        ;;
    list)
        list_configs
        ;;
    --help|-h|help)
        show_help
        ;;
    *)
        echo "ERROR: Unknown command: $1"
        echo "Run 'claudepak --help' for usage information"
        exit 1
        ;;
esac
